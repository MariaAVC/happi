% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_happi_multi_cov.R
\name{happi_multi_cov}
\alias{happi_multi_cov}
\title{Main function for happi, p=q=1; this script contains the modularized version of happi with correct implementation of log likelihood}
\usage{
happi_multi_cov(
  outcome,
  covariate = NULL,
  h0_param = 2,
  quality_var = NULL,
  covariate_formula = NULL,
  covariate_formula_h0 = NULL,
  quality_var_formula = NULL,
  data = NULL,
  max_iterations = 1000,
  min_iterations = 15,
  change_threshold = 0.05,
  epsilon = 0,
  method = "splines",
  random_starts = FALSE,
  firth = TRUE,
  spline_df = 3,
  nstarts = 1,
  seed = 13
)
}
\arguments{
\item{outcome}{length-n vector; this is the vector of a target gene's presence/absence; should be coded as 0 or 1}

\item{covariate}{n x p matrix; this is the matrix for the primary predictor/covariate of interest}

\item{h0_param}{the column index in covariate that has beta=zero under the null}

\item{quality_var}{length-n vector; this is the quality variable vector, currently p = 1  TODO(turn into n x q matrix)}

\item{covariate_formula}{alternative to \code{covariate} argument, a formula for covariates of the form \eqn{~ covariate1 + covariate2 + ...}, requires \code{data} argument}

\item{covariate_formula_h0}{alternative to \code{h0_param} argument, a formula for covariates in the null model, takes the form \eqn{ ~ 1} for an intercept-only model, requires \code{data} argument}

\item{quality_var_formula}{alternative to \code{quality_var} argument, a formula for quality variable of the form \eqn{~ quality_var}, requires \code{data} argument}

\item{data}{required with \code{formula} arguments, a data frame including covariates and the quality variable}

\item{max_iterations}{the maximum number of EM steps that the algorithm will run for}

\item{min_iterations}{the minimum number of EM steps that the algorithm will run for}

\item{change_threshold}{algorithm will terminate early if the likelihood changes by this percentage or less for 5 iterations in a row for both the alternative and the null}

\item{epsilon}{probability of observing a gene when it should be absent; probability between 0 and 1; default is 0. Either a single value or a vector of length n.}

\item{method}{method for estimating f. Defaults to "splines" which fits a monotone spline with df determined by 
argument spline_df; "isotone" for isotonic regression fit}

\item{random_starts}{whether to pick the starting values of beta's randomly. Defaults to FALSE.}

\item{firth}{use firth penalty? Default is TRUE.}

\item{spline_df}{degrees of freedom (in addition to intercept) to use in
monotone spline fit; default 3}

\item{nstarts}{number of starts; Integer. Defaults to \code{1}. Number of starts for optimization.}

\item{seed}{numeric number to set seed for random multiple starts}
}
\value{
An object of class \code{happi}.
}
\description{
Main function for happi, p=q=1; this script contains the modularized version of happi with correct implementation of log likelihood
}
\examples{
data(TM7_data)
x_matrix <- model.matrix(~tongue, data = TM7_data)
happi_results <- happi_multi_cov(outcome = TM7_data$`Cellulase/cellobiase CelA1`,
covariate=x_matrix, 
quality_var=TM7_data$mean_coverage,
max_iterations=1000, 
change_threshold=0.1,
epsilon=0, 
nstarts = 1, 
spline_df = 3)
}
