% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/update_f.R
\name{update_f}
\alias{update_f}
\title{Function for updating f}
\usage{
update_f(
  probs,
  tuning_param = 50,
  method = "splines",
  spline_df = spline_df,
  outcome = outcome,
  nn = nn,
  quality_var = quality_var,
  tt = tt
)
}
\arguments{
\item{probs}{outcomes p; probability between 0 and 1}

\item{tuning_param}{tuning parameter. default set to  50}

\item{method}{method for updating f. Can specify either  isotone or splines. default splines.}

\item{spline_df}{degrees of freedom for splines. default 3.}

\item{outcome}{length n vector; this is the vector of a target gene's presence/absence; should be coded as 0 or 1}

\item{nn}{length of outcome vector}

\item{quality_var}{length-n vector; this is the quality variable vector, currently p = 1}

\item{tt}{E-M iteration}
}
\value{
vector of estimated f's
}
\description{
Function for updating f
}
\examples{
data("TM7_data")
# create design matrix
covariate <- model.matrix(~tongue, data = TM7_data) 
outcome <- TM7_data$`Ribosomal protein L27`
quality_var <- TM7_data$mean_coverage
spline_df <- 3 
nn <- length(outcome)
probs <- rep(0.5,nn)

my_updated_f <- update_f(probs = probs, 
tuning_param = 50, 
method = "splines", 
spline_df = spline_df, 
outcome = outcome, 
nn = nn, 
quality_var = quality_var)
}
